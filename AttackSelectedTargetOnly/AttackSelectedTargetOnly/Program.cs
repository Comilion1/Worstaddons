namespace SelectedTargetOnly { using System; using EloBuddy; using EloBuddy.SDK; using EloBuddy.SDK.Events; using EloBuddy.SDK.Menu; using EloBuddy.SDK.Menu.Values; internal class Program { public static CheckBox enable; private static void Main(string[] args) { Loading.OnLoadingComplete += Loading_OnLoadingComplete; } private static void Loading_OnLoadingComplete(EventArgs args) { enable = MainMenu.AddMenu("FocusSelectedTarget", "FocusSelectedTarget").Add("enable", new CheckBox("Attack Selected Target Only")); Player.OnIssueOrder += Player_OnIssueOrder; } private static void Player_OnIssueOrder(Obj_AI_Base sender, PlayerIssueOrderEventArgs args) { var target = TargetSelector.SelectedTarget; if (!enable.CurrentValue || target == null || args.Target == null || args.Target.NetworkId == target.NetworkId || !sender.IsMe) return; args.Process = false; Player.IssueOrder(GameObjectOrder.AttackTo, target); } } }
// Nice Code Kappa